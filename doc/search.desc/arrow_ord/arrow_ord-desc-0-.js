searchState.loadedDescShard("arrow_ord", 0, "Arrow ordering kernels\nComparison kernels for <code>Array</code>s.\nContains functions and function factories to compare …\nDefines partition kernel for <code>ArrayRef</code>\nDefines sort kernel for <code>ArrayRef</code>\nPerform <code>left IS DISTINCT FROM right</code> operation on two <code>Datum</code>\nPerform <code>left == right</code> operation on two <code>Datum</code>\nPerform <code>left &gt; right</code> operation on two <code>Datum</code>\nPerform <code>left &gt;= right</code> operation on two <code>Datum</code>\nPerform <code>left &lt; right</code> operation on two <code>Datum</code>\nPerform <code>left &lt;= right</code> operation on two <code>Datum</code>\nPerform <code>left != right</code> operation on two <code>Datum</code>\nPerform <code>left IS NOT DISTINCT FROM right</code> operation on two …\nCompare the values at two arbitrary indices in two arrays.\nreturns a comparison function that compares two values at …\nA computed set of partitions, see <code>partition</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns true if this contains no partitions\nReturns the number of partitions\nUse <code>partition</code> instead. Given a list of already sorted …\nGiven a list of lexicographically sorted columns, computes …\nReturns the range of each partition\nAssigns a rank to each value in <code>array</code> based on its …\nA lexicographical comparator that wraps given array data …\nOne column to be used in lexicographical sort\nOptions that define the sort order of a given column\nlexicographically compare values at the wrapped columns …\nWhether to sort in descending order\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSort a list of <code>ArrayRef</code> using <code>SortOptions</code> provided for …\nSort elements lexicographically from a list of <code>ArrayRef</code> …\nWhether to sort nulls first\nIt’s unstable_sort, may not preserve the order of equal …\nSort the <code>ArrayRef</code> using <code>SortOptions</code>.\nSort the <code>ArrayRef</code> partially.\nSort elements from <code>ArrayRef</code> into an unsigned integer (…\nCreate a new lex comparator that will wrap the given sort …")