searchState.loadedDescShard("fallible_streaming_iterator", 0, "Fallible, streaming iteration.\nAn iterator which wraps a normal <code>Iterator</code>.\nA fallible, streaming iterator which can be advanced from …\nAn iterator over no items.\nThe error type of iteration.\nA fallible, streaming iterator.\nAn iterator which filters elements with a predicate.\nAn iterator which is well-behaved at the beginning and end …\nThe type being iterated over.\nAn iterator which applies a transform to elements.\nAn iterator which applies a transform to errors.\nAn iterator which applies a transform to elements.\nAn iterator which skips a number of initial elements.\nAn iterator which skips initial elements matching a …\nAn iterator which only returns a number of initial …\nAn iterator which only returns initial elements matching a …\nAdvances the iterator to the next position.\nAdvances the state of the iterator to the next item from …\nDetermines if all elements of the iterator satisfy a …\nDetermines if any elements of the iterator satisfy a …\nBorrows an iterator, rather than consuming it.\nConverts a normal <code>Iterator</code> over <code>Results</code> of references into …\nReturns the number of remaining elements in the iterator.\nReturns an iterator over no items.\nReturns an iterator which filters elements by a predicate.\nReturns the first element of the iterator which satisfies …\nCalls a closure on each element of an iterator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an iterator which is well-behaved at the beginning …\nReturns the current element.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator which applies a transform to elements.\nReturns an iterator that applies a transform to errors.\nReturns an iterator which applies a transform to elements.\nAdvances the iterator, returning the next element.\nAdvances the back of the iterator, returning the last …\nReturns the <code>nth</code> element of the iterator.\nReturns the position of the first element matching a …\nReturns bounds on the number of remaining elements in the …\nReturns an iterator which skips the first <code>n</code> elements.\nReturns an iterator which skips the first sequence of …\nReturns an iterator which only returns the first <code>n</code> …\nReturns an iterator which only returns the first sequence …")